plugins {
    id 'java'
}

def versions = [
        ScalaBinary: "2.13",
        AkkaVersion: "2.7.0"
]

tasks.register('threadsCLI', JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    setMainClass('part1.threads.cli.Main')
}

tasks.register('threadsGUI', JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    setMainClass('part1.threads.gui.Main')
}

tasks.register('tasksCLI', JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    setMainClass('part1.tasks.cli.Main')
}

tasks.register('tasksGUI', JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    setMainClass('part1.tasks.gui.Main')
}

tasks.register('rxCLI', JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    setMainClass('part1.reactive.cli.Main')
}

tasks.register('rxGUI', JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    setMainClass('part1.reactive.gui.Main')
}

tasks.register('eventloopCLI', JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    setMainClass('part1.eventloop.cli.Main')
}

tasks.register('eventloopGUI', JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    setMainClass('part1.eventloop.gui.Main')
}

tasks.register('actorsCLI', JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    setMainClass('part1.actors.cli.Main')
}

tasks.register('actorsGUI', JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    setMainClass('part1.actors.gui.Main')
}

tasks.register('actorsRMI', JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    setMainClass('part2.RMI.Main')
}

tasks.register('actorsSD', JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    setMainClass('part2.actors.Main')
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.apache.pdfbox:pdfbox:2.0.24'
    implementation 'org.apache.commons:commons-lang3:3.0'
    implementation 'io.reactivex.rxjava3:rxjava:3.1.2'
    implementation 'io.vertx:vertx-core:4.2.1'

    implementation platform("com.typesafe.akka:akka-bom_${versions.ScalaBinary}:${versions.AkkaVersion}")
    implementation "com.typesafe.akka:akka-cluster-typed_${versions.ScalaBinary}"
    implementation "com.typesafe.akka:akka-serialization-jackson_${versions.ScalaBinary}"
    implementation "com.typesafe.akka:akka-actor-typed_${versions.ScalaBinary}"
    implementation("com.typesafe.akka:akka-cluster_${versions.ScalaBinary}:${versions.AkkaVersion}")
    implementation("com.typesafe.akka:akka-stream_${versions.ScalaBinary}:${versions.AkkaVersion}")
    implementation("com.typesafe.akka:akka-serialization-jackson_${versions.ScalaBinary}:${versions.AkkaVersion}")
    implementation("com.typesafe.akka:akka-distributed-data_${versions.ScalaBinary}:${versions.AkkaVersion}")

    testImplementation "com.typesafe.akka:akka-actor-testkit-typed_${versions.ScalaBinary}"

    implementation 'ch.qos.logback:logback-classic:1.2.6'

    implementation("org.slf4j:slf4j-api:1.7.5")
    //implementation("org.slf4j:slf4j-log4j12:1.7.5")
}
